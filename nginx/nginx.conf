user  nginx;
# Should be: number of processor units (cores) on server
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    # Must have for Linux
    use epoll;
    worker_connections 1024;
    # Accept as many connections as possible, after nginx gets notification about a new connection.
    # May flood worker_connections, if that option is set too low.
    multi_accept on;
}


http {
    server_tokens off;
    include	  /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    index index.php index.htm index.html;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # omit SSLv3 because of POODLE (CVE-2014-3566)

    # tighten SSL security further: this is also good for performance and scoring higher in SSL test results
    ssl_prefer_server_ciphers on;
    ssl_ciphers DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
    # faster filters (not A score):
    # ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!AESGCM;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;
    # this file is generated during initial server provisioning
    ssl_dhparam /etc/dhparams.pem;
    # stapling related settings: revokation checks produce 30% of SSL slowness, we address this by providing revocation information in response via OSCP
    # stapling file is configured inside server blocks, to create it: cat rootCA.pem ( http://www.startssl.com/certs/ca.pem )  intermCa.pem > www.domain.stapled.pem
    # enable stapling for every SSL server block, otherwise it will not work for any server block
    resolver 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=300s;
    resolver_timeout 5s;

    # get information from load balancer about protocol in use. requires change to fastcg_params from $https to $fastcgi_https. safe to keep this even without load balancer
    map $http_x_forwarded_proto $fastcgi_https {
      default $https;
      https on;
    }
    # tell fastcgi about protocol in use. in fastcg_params, adjust variable to $fastcgi_port
    map $http_x_forwarded_port $fastcgi_port {
      default $server_port; # it means we are not using load balancer
      80 80;
      443 443;
    }

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*.conf;

}
